#!/bin/bash

# 履歴設定
export HISTSIZE=10000
export HISTFILESIZE=20000
export HISTCONTROL=ignoreboth:erasedups
shopt -s histappend

# コマンド実行後にウィンドウサイズを更新
shopt -s checkwinsize

# lsのカラーサポートを有効化
if [ -x /usr/bin/dircolors ]; then
    if test -r ~/.dircolors; then
        eval "$(dircolors -b ~/.dircolors)"
    else
        eval "$(dircolors -b)"
    fi
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# 共通エイリアス
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'

# Gitエイリアス
alias gs='git status'
alias ga='git add'
alias gc='git commit'
alias gd='git diff'
alias gl='git log --oneline --graph --decorate'
alias gp='git push'
alias gpl='git pull'

# 安全性エイリアス
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

# ブートストラップ・セットアップ用エイリアス
alias dotfiles-install='cd ~/dotfiles && bash install.sh'
alias dotfiles-update='cd ~/dotfiles && bash update-tools.sh'
alias dotfiles-vscode='cd ~/dotfiles && bash apply-vscode-config.sh'
alias dotfiles-git='cd ~/dotfiles && bash setup-git.sh'
alias dotfiles-bootstrap='cd ~/dotfiles && ./bootstrap.sh'
alias mise-status='mise list --current'

# dotfilesの更新をpushする関数
dotpush() {
    local current_dir
    current_dir=$(pwd)
    cd ~/dotfiles || return

    git add -A

    if [ -n "$1" ]; then
        git commit -m "$1"
    else
        git commit -m "Update dotfiles"
    fi

    git push

    cd "$current_dir" || return
}

# プロンプトのカスタマイズ
PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '

# miseが利用可能な場合は読み込み
if [ -f "$HOME/.local/bin/mise" ]; then
    export PATH="$HOME/.local/bin:$PATH"
    eval "$("$HOME/.local/bin/mise" activate bash)"
fi


# ローカルbashrcが存在する場合は読み込み
if [ -f "$HOME/.bashrc.local" ]; then
    . "$HOME/.bashrc.local"
fi

alias cc='claude --dangerously-skip-permissions'

# Add mise shims to PATH
export PATH="$HOME/.local/share/mise/shims:$PATH"

eval "$(starship init bash)"
export MISE_SHELL=bash
export __MISE_ORIG_PATH="$PATH"

mise() {
  local command
  command="${1:-}"
  if [ "$#" = 0 ]; then
    command /home/ksera/.local/bin/mise
    return
  fi
  shift

  case "$command" in
  deactivate|shell|sh)
    # if argv doesn't contains -h,--help
    if [[ ! " $* " =~ " --help " ]] && [[ ! " $* " =~ " -h " ]]; then
      eval "$(command /home/ksera/.local/bin/mise "$command" "$@")"
      return $?
    fi
    ;;
  esac
  command /home/ksera/.local/bin/mise "$command" "$@"
}

_mise_hook() {
  local previous_exit_status=$?;
  eval "$(mise hook-env -s bash)";
  return $previous_exit_status;
};
if [[ ";${PROMPT_COMMAND:-};" != *";_mise_hook;"* ]]; then
  PROMPT_COMMAND="_mise_hook${PROMPT_COMMAND:+;$PROMPT_COMMAND}"
fi
# shellcheck shell=bash
export -a chpwd_functions
function __zsh_like_cd()
{
  \typeset __zsh_like_cd_hook
  if
    builtin "$@"
  then
    for __zsh_like_cd_hook in chpwd "${chpwd_functions[@]}"
    do
      if \typeset -f "$__zsh_like_cd_hook" >/dev/null 2>&1
      then "$__zsh_like_cd_hook" || break # finish on first failed hook
      fi
    done
    true
  else
    return $?
  fi
}

# shellcheck shell=bash
[[ -n "${ZSH_VERSION:-}" ]] ||
{
  function cd()    { __zsh_like_cd cd    "$@" ; }
  function popd()  { __zsh_like_cd popd  "$@" ; }
  function pushd() { __zsh_like_cd pushd "$@" ; }
}

chpwd_functions+=(_mise_hook)
_mise_hook
if [ -z "${_mise_cmd_not_found:-}" ]; then
    _mise_cmd_not_found=1
    if [ -n "$(declare -f command_not_found_handle)" ]; then
        _mise_cmd_not_found_handle=$(declare -f command_not_found_handle)
        eval "${_mise_cmd_not_found_handle/command_not_found_handle/_command_not_found_handle}"
    fi

    command_not_found_handle() {
        if [[ "$1" != "mise" && "$1" != "mise-"* ]] && /home/ksera/.local/bin/mise hook-not-found -s bash -- "$1"; then
          _mise_hook
          "$@"
        elif [ -n "$(declare -f _command_not_found_handle)" ]; then
            _command_not_found_handle "$@"
        else
            echo "bash: command not found: $1" >&2
            return 127
        fi
    }
fi
