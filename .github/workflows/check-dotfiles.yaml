name: CI - Dotfiles

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**.sh'
      - '.github/workflows/**'
      - 'config/**'
      - '.config/**'
  pull_request:
    branches: [ main ]
    paths:
      - '**.sh'
      - '.github/workflows/**'
      - 'config/**'
      - '.config/**'
  workflow_dispatch:

jobs:
  shellcheck:
    name: ShellCheck
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔐 Make scripts executable
        run: chmod +x *.sh

      - name: 🐚 Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          scandir: '.'
        env:
          SHELLCHECK_OPTS: -e SC1091 -e SC2034

  test-bootstrap:
    name: Test Bootstrap Script
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-22.04]
      fail-fast: false
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🧪 Test bootstrap script (dry run)
        run: |
          set -e
          chmod +x bootstrap.sh
          # Test help option
          ./bootstrap.sh --help
          # Test dry run mode
          echo "Testing bootstrap script in dry-run mode..."
          ./bootstrap.sh --dry-run || true

  validate-configs:
    name: Validate Configuration Files
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔍 Check for config files
        run: |
          echo "Checking configuration files..."

          # Check if important config directories exist
          if [ -d "config" ]; then
            echo "✅ config directory found"
            ls -la config/ || true
          fi

          if [ -d ".config" ]; then
            echo "✅ .config directory found"
            ls -la .config/ || true
          fi

          # Check for dotfiles
          echo ""
          echo "Dotfiles found:"
          find . -maxdepth 1 -name ".*" -type f ! -name ".git*" | sort

      - name: 📝 Validate symlink targets
        run: |
          echo "Validating symlink structure in bootstrap.sh..."
          # Extract and validate symlink targets from bootstrap script
          grep -E "ln -sf|symlink" bootstrap.sh || echo "No direct symlink commands found"

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔒 Check for sensitive data
        run: |
          echo "Checking for potential sensitive data..."
          # Check for potential secrets or tokens
          ! grep -r -E "(api_key|api_secret|access_token|private_key|password)" --exclude-dir=.git . || echo "⚠️  Warning: Potential sensitive data found"

          # Check for hardcoded credentials
          ! grep -r -E "[a-zA-Z0-9]{32,}" --exclude-dir=.git . || echo "ℹ️  Long strings detected (verify these are not credentials)"

  markdown-lint:
    name: Markdown Lint
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔍 Check for Markdown files
        id: check_md
        run: |
          if find . -name "*.md" -type f | grep -q .; then
            echo "has_md=true" >> $GITHUB_OUTPUT
            echo "Markdown files found"
          else
            echo "has_md=false" >> $GITHUB_OUTPUT
            echo "No Markdown files found"
          fi

      - name: 📝 Lint Markdown files
        if: steps.check_md.outputs.has_md == 'true'
        uses: DavidAnson/markdownlint-cli2-action@v16
        continue-on-error: true
        with:
          globs: '**/*.md'